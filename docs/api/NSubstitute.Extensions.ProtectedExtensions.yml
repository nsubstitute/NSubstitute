### YamlMime:ManagedReference
items:
- uid: NSubstitute.Extensions.ProtectedExtensions
  commentId: T:NSubstitute.Extensions.ProtectedExtensions
  id: ProtectedExtensions
  parent: NSubstitute.Extensions
  children:
  - NSubstitute.Extensions.ProtectedExtensions.Protected``1(``0,System.String,System.Object[])
  - NSubstitute.Extensions.ProtectedExtensions.When``1(``0,System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: ProtectedExtensions
  nameWithType: ProtectedExtensions
  fullName: NSubstitute.Extensions.ProtectedExtensions
  type: Class
  source:
    remote:
      path: src/NSubstitute/Extensions/ProtectedExtensions.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: ProtectedExtensions
    path: ../src/NSubstitute/Extensions/ProtectedExtensions.cs
    startLine: 6
  assemblies:
  - NSubstitute
  namespace: NSubstitute.Extensions
  syntax:
    content: public static class ProtectedExtensions
    content.vb: Public Module ProtectedExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NSubstitute.Extensions.ProtectedExtensions.Protected``1(``0,System.String,System.Object[])
  commentId: M:NSubstitute.Extensions.ProtectedExtensions.Protected``1(``0,System.String,System.Object[])
  id: Protected``1(``0,System.String,System.Object[])
  isExtensionMethod: true
  parent: NSubstitute.Extensions.ProtectedExtensions
  langs:
  - csharp
  - vb
  name: Protected<T>(T, string, params object[])
  nameWithType: ProtectedExtensions.Protected<T>(T, string, params object[])
  fullName: NSubstitute.Extensions.ProtectedExtensions.Protected<T>(T, string, params object[])
  type: Method
  source:
    remote:
      path: src/NSubstitute/Extensions/ProtectedExtensions.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Protected
    path: ../src/NSubstitute/Extensions/ProtectedExtensions.cs
    startLine: 19
  assemblies:
  - NSubstitute
  namespace: NSubstitute.Extensions
  summary: Configure behavior for a protected method with return value
  example: []
  syntax:
    content: 'public static object? Protected<T>(this T obj, string methodName, params object[] args) where T : class'
    parameters:
    - id: obj
      type: '{T}'
      description: The object.
    - id: methodName
      type: System.String
      description: Name of the method.
    - id: args
      type: System.Object[]
      description: The method arguments.
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Object
      description: Result object from the method invocation.
    content.vb: Public Shared Function [Protected](Of T As Class)(obj As T, methodName As String, ParamArray args As Object()) As Object
  overload: NSubstitute.Extensions.ProtectedExtensions.Protected*
  exceptions:
  - type: NSubstitute.Exceptions.NullSubstituteReferenceException
    commentId: T:NSubstitute.Exceptions.NullSubstituteReferenceException
    description: Substitute - Cannot mock null object
  - type: NSubstitute.Exceptions.ProtectedMethodNotFoundException
    commentId: T:NSubstitute.Exceptions.ProtectedMethodNotFoundException
    description: Error mocking method.  Method must be protected virtual and with correct matching arguments and type
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Must provide valid protected method name to mock - methodName
  nameWithType.vb: ProtectedExtensions.Protected(Of T)(T, String, ParamArray Object())
  fullName.vb: NSubstitute.Extensions.ProtectedExtensions.Protected(Of T)(T, String, ParamArray Object())
  name.vb: Protected(Of T)(T, String, ParamArray Object())
- uid: NSubstitute.Extensions.ProtectedExtensions.When``1(``0,System.String,System.Object[])
  commentId: M:NSubstitute.Extensions.ProtectedExtensions.When``1(``0,System.String,System.Object[])
  id: When``1(``0,System.String,System.Object[])
  isExtensionMethod: true
  parent: NSubstitute.Extensions.ProtectedExtensions
  langs:
  - csharp
  - vb
  name: When<T>(T, string, params object[])
  nameWithType: ProtectedExtensions.When<T>(T, string, params object[])
  fullName: NSubstitute.Extensions.ProtectedExtensions.When<T>(T, string, params object[])
  type: Method
  source:
    remote:
      path: src/NSubstitute/Extensions/ProtectedExtensions.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: When
    path: ../src/NSubstitute/Extensions/ProtectedExtensions.cs
    startLine: 53
  assemblies:
  - NSubstitute
  namespace: NSubstitute.Extensions
  summary: Configure behavior for a protected method with no return vlaue
  example: []
  syntax:
    content: 'public static WhenCalled<T> When<T>(this T obj, string methodName, params object[] args) where T : class'
    parameters:
    - id: obj
      type: '{T}'
      description: The object.
    - id: methodName
      type: System.String
      description: Name of the method.
    - id: args
      type: System.Object[]
      description: The method arguments.
    typeParameters:
    - id: T
      description: ''
    return:
      type: NSubstitute.Core.WhenCalled{{T}}
      description: WhenCalled&lt;T&gt;.
    content.vb: Public Shared Function [When](Of T As Class)(obj As T, methodName As String, ParamArray args As Object()) As WhenCalled(Of T)
  overload: NSubstitute.Extensions.ProtectedExtensions.When*
  exceptions:
  - type: NSubstitute.Exceptions.NullSubstituteReferenceException
    commentId: T:NSubstitute.Exceptions.NullSubstituteReferenceException
    description: Substitute - Cannot mock null object
  - type: NSubstitute.Exceptions.ProtectedMethodNotFoundException
    commentId: T:NSubstitute.Exceptions.ProtectedMethodNotFoundException
    description: Error mocking method.  Method must be protected virtual and with correct matching arguments and type
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Must provide valid protected method name to mock - methodName
  nameWithType.vb: ProtectedExtensions.When(Of T)(T, String, ParamArray Object())
  fullName.vb: NSubstitute.Extensions.ProtectedExtensions.When(Of T)(T, String, ParamArray Object())
  name.vb: When(Of T)(T, String, ParamArray Object())
references:
- uid: NSubstitute.Extensions
  commentId: N:NSubstitute.Extensions
  href: NSubstitute.html
  name: NSubstitute.Extensions
  nameWithType: NSubstitute.Extensions
  fullName: NSubstitute.Extensions
  spec.csharp:
  - uid: NSubstitute
    name: NSubstitute
    href: NSubstitute.html
  - name: .
  - uid: NSubstitute.Extensions
    name: Extensions
    href: NSubstitute.Extensions.html
  spec.vb:
  - uid: NSubstitute
    name: NSubstitute
    href: NSubstitute.html
  - name: .
  - uid: NSubstitute.Extensions
    name: Extensions
    href: NSubstitute.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NSubstitute.Exceptions.NullSubstituteReferenceException
  commentId: T:NSubstitute.Exceptions.NullSubstituteReferenceException
  href: NSubstitute.Exceptions.NullSubstituteReferenceException.html
  name: NullSubstituteReferenceException
  nameWithType: NullSubstituteReferenceException
  fullName: NSubstitute.Exceptions.NullSubstituteReferenceException
- uid: NSubstitute.Exceptions.ProtectedMethodNotFoundException
  commentId: T:NSubstitute.Exceptions.ProtectedMethodNotFoundException
  href: NSubstitute.Exceptions.ProtectedMethodNotFoundException.html
  name: ProtectedMethodNotFoundException
  nameWithType: ProtectedMethodNotFoundException
  fullName: NSubstitute.Exceptions.ProtectedMethodNotFoundException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: NSubstitute.Extensions.ProtectedExtensions.Protected*
  commentId: Overload:NSubstitute.Extensions.ProtectedExtensions.Protected
  href: NSubstitute.Extensions.ProtectedExtensions.html#NSubstitute_Extensions_ProtectedExtensions_Protected__1___0_System_String_System_Object___
  name: Protected
  nameWithType: ProtectedExtensions.Protected
  fullName: NSubstitute.Extensions.ProtectedExtensions.Protected
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: NSubstitute.Extensions.ProtectedExtensions.When*
  commentId: Overload:NSubstitute.Extensions.ProtectedExtensions.When
  href: NSubstitute.Extensions.ProtectedExtensions.html#NSubstitute_Extensions_ProtectedExtensions_When__1___0_System_String_System_Object___
  name: When
  nameWithType: ProtectedExtensions.When
  fullName: NSubstitute.Extensions.ProtectedExtensions.When
- uid: NSubstitute.Core.WhenCalled{{T}}
  commentId: T:NSubstitute.Core.WhenCalled{``0}
  parent: NSubstitute.Core
  definition: NSubstitute.Core.WhenCalled`1
  href: NSubstitute.Core.WhenCalled-1.html
  name: WhenCalled<T>
  nameWithType: WhenCalled<T>
  fullName: NSubstitute.Core.WhenCalled<T>
  nameWithType.vb: WhenCalled(Of T)
  fullName.vb: NSubstitute.Core.WhenCalled(Of T)
  name.vb: WhenCalled(Of T)
  spec.csharp:
  - uid: NSubstitute.Core.WhenCalled`1
    name: WhenCalled
    href: NSubstitute.Core.WhenCalled-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NSubstitute.Core.WhenCalled`1
    name: WhenCalled
    href: NSubstitute.Core.WhenCalled-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NSubstitute.Core.WhenCalled`1
  commentId: T:NSubstitute.Core.WhenCalled`1
  href: NSubstitute.Core.WhenCalled-1.html
  name: WhenCalled<T>
  nameWithType: WhenCalled<T>
  fullName: NSubstitute.Core.WhenCalled<T>
  nameWithType.vb: WhenCalled(Of T)
  fullName.vb: NSubstitute.Core.WhenCalled(Of T)
  name.vb: WhenCalled(Of T)
  spec.csharp:
  - uid: NSubstitute.Core.WhenCalled`1
    name: WhenCalled
    href: NSubstitute.Core.WhenCalled-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NSubstitute.Core.WhenCalled`1
    name: WhenCalled
    href: NSubstitute.Core.WhenCalled-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NSubstitute.Core
  commentId: N:NSubstitute.Core
  href: NSubstitute.html
  name: NSubstitute.Core
  nameWithType: NSubstitute.Core
  fullName: NSubstitute.Core
  spec.csharp:
  - uid: NSubstitute
    name: NSubstitute
    href: NSubstitute.html
  - name: .
  - uid: NSubstitute.Core
    name: Core
    href: NSubstitute.Core.html
  spec.vb:
  - uid: NSubstitute
    name: NSubstitute
    href: NSubstitute.html
  - name: .
  - uid: NSubstitute.Core
    name: Core
    href: NSubstitute.Core.html
