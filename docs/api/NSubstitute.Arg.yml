### YamlMime:ManagedReference
items:
- uid: NSubstitute.Arg
  commentId: T:NSubstitute.Arg
  id: Arg
  parent: NSubstitute
  children:
  - NSubstitute.Arg.Any``1
  - NSubstitute.Arg.Do``1(System.Action{System.Object})
  - NSubstitute.Arg.Do``1(System.Action{``0})
  - NSubstitute.Arg.Invoke
  - NSubstitute.Arg.InvokeDelegate``1(System.Object[])
  - NSubstitute.Arg.Invoke``1(``0)
  - NSubstitute.Arg.Invoke``2(``0,``1)
  - NSubstitute.Arg.Invoke``3(``0,``1,``2)
  - NSubstitute.Arg.Invoke``4(``0,``1,``2,``3)
  - NSubstitute.Arg.Is``1(System.Linq.Expressions.Expression{System.Predicate{System.Object}})
  - NSubstitute.Arg.Is``1(System.Linq.Expressions.Expression{System.Predicate{``0}})
  - NSubstitute.Arg.Is``1(``0)
  langs:
  - csharp
  - vb
  name: Arg
  nameWithType: Arg
  fullName: NSubstitute.Arg
  type: Class
  source:
    remote:
      path: src/NSubstitute/Compatibility/Arg.Compat.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Arg
    path: ../src/NSubstitute/Compatibility/Arg.Compat.cs
    startLine: 8
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: Argument matchers used for specifying calls to substitutes.
  example: []
  syntax:
    content: public static class Arg
    content.vb: Public Module Arg
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NSubstitute.Arg.Any``1
  commentId: M:NSubstitute.Arg.Any``1
  id: Any``1
  parent: NSubstitute.Arg
  langs:
  - csharp
  - vb
  name: Any<T>()
  nameWithType: Arg.Any<T>()
  fullName: NSubstitute.Arg.Any<T>()
  type: Method
  source:
    remote:
      path: src/NSubstitute/Arg.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Any
    path: ../src/NSubstitute/Arg.cs
    startLine: 24
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: Match any argument value compatible with type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: public static ref T Any<T>()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared ByRef Function Any(Of T)() As T
  overload: NSubstitute.Arg.Any*
  nameWithType.vb: Arg.Any(Of T)()
  fullName.vb: NSubstitute.Arg.Any(Of T)()
  name.vb: Any(Of T)()
- uid: NSubstitute.Arg.Is``1(``0)
  commentId: M:NSubstitute.Arg.Is``1(``0)
  id: Is``1(``0)
  parent: NSubstitute.Arg
  langs:
  - csharp
  - vb
  name: Is<T>(T)
  nameWithType: Arg.Is<T>(T)
  fullName: NSubstitute.Arg.Is<T>(T)
  type: Method
  source:
    remote:
      path: src/NSubstitute/Arg.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Is
    path: ../src/NSubstitute/Arg.cs
    startLine: 32
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: Match argument that is equal to <code class="paramref">value</code>.
  example: []
  syntax:
    content: public static ref T Is<T>(T value)
    parameters:
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared ByRef Function [Is](Of T)(value As T) As T
  overload: NSubstitute.Arg.Is*
  nameWithType.vb: Arg.Is(Of T)(T)
  fullName.vb: NSubstitute.Arg.Is(Of T)(T)
  name.vb: Is(Of T)(T)
- uid: NSubstitute.Arg.Is``1(System.Linq.Expressions.Expression{System.Predicate{``0}})
  commentId: M:NSubstitute.Arg.Is``1(System.Linq.Expressions.Expression{System.Predicate{``0}})
  id: Is``1(System.Linq.Expressions.Expression{System.Predicate{``0}})
  parent: NSubstitute.Arg
  langs:
  - csharp
  - vb
  name: Is<T>(Expression<Predicate<T?>>)
  nameWithType: Arg.Is<T>(Expression<Predicate<T?>>)
  fullName: NSubstitute.Arg.Is<T>(System.Linq.Expressions.Expression<System.Predicate<T?>>)
  type: Method
  source:
    remote:
      path: src/NSubstitute/Arg.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Is
    path: ../src/NSubstitute/Arg.cs
    startLine: 41
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: >-
    Match argument that satisfies <code class="paramref">predicate</code>.

    If the <code class="paramref">predicate</code> throws an exception for an argument it will be treated as non-matching.
  example: []
  syntax:
    content: public static ref T Is<T>(Expression<Predicate<T?>> predicate)
    parameters:
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Predicate{{T}}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared ByRef Function [Is](Of T)(predicate As Expression(Of Predicate(Of T))) As T
  overload: NSubstitute.Arg.Is*
  nameWithType.vb: Arg.Is(Of T)(Expression(Of Predicate(Of T)))
  fullName.vb: NSubstitute.Arg.Is(Of T)(System.Linq.Expressions.Expression(Of System.Predicate(Of T)))
  name.vb: Is(Of T)(Expression(Of Predicate(Of T)))
- uid: NSubstitute.Arg.Is``1(System.Linq.Expressions.Expression{System.Predicate{System.Object}})
  commentId: M:NSubstitute.Arg.Is``1(System.Linq.Expressions.Expression{System.Predicate{System.Object}})
  id: Is``1(System.Linq.Expressions.Expression{System.Predicate{System.Object}})
  parent: NSubstitute.Arg
  langs:
  - csharp
  - vb
  name: Is<T>(Expression<Predicate<object?>>)
  nameWithType: Arg.Is<T>(Expression<Predicate<object?>>)
  fullName: NSubstitute.Arg.Is<T>(System.Linq.Expressions.Expression<System.Predicate<object?>>)
  type: Method
  source:
    remote:
      path: src/NSubstitute/Arg.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Is
    path: ../src/NSubstitute/Arg.cs
    startLine: 50
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: >-
    Match argument that satisfies <code class="paramref">predicate</code>.

    If the <code class="paramref">predicate</code> throws an exception for an argument it will be treated as non-matching.
  example: []
  syntax:
    content: 'public static ref T Is<T>(Expression<Predicate<object?>> predicate) where T : Arg.AnyType'
    parameters:
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Predicate{System.Object}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared ByRef Function [Is](Of T As Arg.AnyType)(predicate As Expression(Of Predicate(Of Object))) As T
  overload: NSubstitute.Arg.Is*
  nameWithType.vb: Arg.Is(Of T)(Expression(Of Predicate(Of Object)))
  fullName.vb: NSubstitute.Arg.Is(Of T)(System.Linq.Expressions.Expression(Of System.Predicate(Of Object)))
  name.vb: Is(Of T)(Expression(Of Predicate(Of Object)))
- uid: NSubstitute.Arg.Invoke
  commentId: M:NSubstitute.Arg.Invoke
  id: Invoke
  parent: NSubstitute.Arg
  langs:
  - csharp
  - vb
  name: Invoke()
  nameWithType: Arg.Invoke()
  fullName: NSubstitute.Arg.Invoke()
  type: Method
  source:
    remote:
      path: src/NSubstitute/Arg.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Invoke
    path: ../src/NSubstitute/Arg.cs
    startLine: 58
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: Invoke any <xref href="System.Action" data-throw-if-not-resolved="false"></xref> argument whenever a matching call is made to the substitute.
  example: []
  syntax:
    content: public static ref Action Invoke()
    return:
      type: System.Action
    content.vb: Public Shared ByRef Function Invoke() As Action
  overload: NSubstitute.Arg.Invoke*
- uid: NSubstitute.Arg.Invoke``1(``0)
  commentId: M:NSubstitute.Arg.Invoke``1(``0)
  id: Invoke``1(``0)
  parent: NSubstitute.Arg
  langs:
  - csharp
  - vb
  name: Invoke<T>(T)
  nameWithType: Arg.Invoke<T>(T)
  fullName: NSubstitute.Arg.Invoke<T>(T)
  type: Method
  source:
    remote:
      path: src/NSubstitute/Arg.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Invoke
    path: ../src/NSubstitute/Arg.cs
    startLine: 66
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: Invoke any <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> argument with specified argument whenever a matching call is made to the substitute.
  example: []
  syntax:
    content: public static ref Action<T> Invoke<T>(T arg)
    parameters:
    - id: arg
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Action{{T}}
    content.vb: Public Shared ByRef Function Invoke(Of T)(arg As T) As Action(Of T)
  overload: NSubstitute.Arg.Invoke*
  nameWithType.vb: Arg.Invoke(Of T)(T)
  fullName.vb: NSubstitute.Arg.Invoke(Of T)(T)
  name.vb: Invoke(Of T)(T)
- uid: NSubstitute.Arg.Invoke``2(``0,``1)
  commentId: M:NSubstitute.Arg.Invoke``2(``0,``1)
  id: Invoke``2(``0,``1)
  parent: NSubstitute.Arg
  langs:
  - csharp
  - vb
  name: Invoke<T1, T2>(T1, T2)
  nameWithType: Arg.Invoke<T1, T2>(T1, T2)
  fullName: NSubstitute.Arg.Invoke<T1, T2>(T1, T2)
  type: Method
  source:
    remote:
      path: src/NSubstitute/Arg.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Invoke
    path: ../src/NSubstitute/Arg.cs
    startLine: 74
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: Invoke any <xref href="System.Action%602" data-throw-if-not-resolved="false"></xref> argument with specified arguments whenever a matching call is made to the substitute.
  example: []
  syntax:
    content: public static ref Action<T1, T2> Invoke<T1, T2>(T1 arg1, T2 arg2)
    parameters:
    - id: arg1
      type: '{T1}'
    - id: arg2
      type: '{T2}'
    typeParameters:
    - id: T1
    - id: T2
    return:
      type: System.Action{{T1},{T2}}
    content.vb: Public Shared ByRef Function Invoke(Of T1, T2)(arg1 As T1, arg2 As T2) As Action(Of T1, T2)
  overload: NSubstitute.Arg.Invoke*
  nameWithType.vb: Arg.Invoke(Of T1, T2)(T1, T2)
  fullName.vb: NSubstitute.Arg.Invoke(Of T1, T2)(T1, T2)
  name.vb: Invoke(Of T1, T2)(T1, T2)
- uid: NSubstitute.Arg.Invoke``3(``0,``1,``2)
  commentId: M:NSubstitute.Arg.Invoke``3(``0,``1,``2)
  id: Invoke``3(``0,``1,``2)
  parent: NSubstitute.Arg
  langs:
  - csharp
  - vb
  name: Invoke<T1, T2, T3>(T1, T2, T3)
  nameWithType: Arg.Invoke<T1, T2, T3>(T1, T2, T3)
  fullName: NSubstitute.Arg.Invoke<T1, T2, T3>(T1, T2, T3)
  type: Method
  source:
    remote:
      path: src/NSubstitute/Arg.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Invoke
    path: ../src/NSubstitute/Arg.cs
    startLine: 82
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: Invoke any <xref href="System.Action%603" data-throw-if-not-resolved="false"></xref> argument with specified arguments whenever a matching call is made to the substitute.
  example: []
  syntax:
    content: public static ref Action<T1, T2, T3> Invoke<T1, T2, T3>(T1 arg1, T2 arg2, T3 arg3)
    parameters:
    - id: arg1
      type: '{T1}'
    - id: arg2
      type: '{T2}'
    - id: arg3
      type: '{T3}'
    typeParameters:
    - id: T1
    - id: T2
    - id: T3
    return:
      type: System.Action{{T1},{T2},{T3}}
    content.vb: Public Shared ByRef Function Invoke(Of T1, T2, T3)(arg1 As T1, arg2 As T2, arg3 As T3) As Action(Of T1, T2, T3)
  overload: NSubstitute.Arg.Invoke*
  nameWithType.vb: Arg.Invoke(Of T1, T2, T3)(T1, T2, T3)
  fullName.vb: NSubstitute.Arg.Invoke(Of T1, T2, T3)(T1, T2, T3)
  name.vb: Invoke(Of T1, T2, T3)(T1, T2, T3)
- uid: NSubstitute.Arg.Invoke``4(``0,``1,``2,``3)
  commentId: M:NSubstitute.Arg.Invoke``4(``0,``1,``2,``3)
  id: Invoke``4(``0,``1,``2,``3)
  parent: NSubstitute.Arg
  langs:
  - csharp
  - vb
  name: Invoke<T1, T2, T3, T4>(T1, T2, T3, T4)
  nameWithType: Arg.Invoke<T1, T2, T3, T4>(T1, T2, T3, T4)
  fullName: NSubstitute.Arg.Invoke<T1, T2, T3, T4>(T1, T2, T3, T4)
  type: Method
  source:
    remote:
      path: src/NSubstitute/Arg.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Invoke
    path: ../src/NSubstitute/Arg.cs
    startLine: 90
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: Invoke any <xref href="System.Action%604" data-throw-if-not-resolved="false"></xref> argument with specified arguments whenever a matching call is made to the substitute.
  example: []
  syntax:
    content: public static ref Action<T1, T2, T3, T4> Invoke<T1, T2, T3, T4>(T1 arg1, T2 arg2, T3 arg3, T4 arg4)
    parameters:
    - id: arg1
      type: '{T1}'
    - id: arg2
      type: '{T2}'
    - id: arg3
      type: '{T3}'
    - id: arg4
      type: '{T4}'
    typeParameters:
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    return:
      type: System.Action{{T1},{T2},{T3},{T4}}
    content.vb: Public Shared ByRef Function Invoke(Of T1, T2, T3, T4)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4) As Action(Of T1, T2, T3, T4)
  overload: NSubstitute.Arg.Invoke*
  nameWithType.vb: Arg.Invoke(Of T1, T2, T3, T4)(T1, T2, T3, T4)
  fullName.vb: NSubstitute.Arg.Invoke(Of T1, T2, T3, T4)(T1, T2, T3, T4)
  name.vb: Invoke(Of T1, T2, T3, T4)(T1, T2, T3, T4)
- uid: NSubstitute.Arg.InvokeDelegate``1(System.Object[])
  commentId: M:NSubstitute.Arg.InvokeDelegate``1(System.Object[])
  id: InvokeDelegate``1(System.Object[])
  parent: NSubstitute.Arg
  langs:
  - csharp
  - vb
  name: InvokeDelegate<TDelegate>(params object[])
  nameWithType: Arg.InvokeDelegate<TDelegate>(params object[])
  fullName: NSubstitute.Arg.InvokeDelegate<TDelegate>(params object[])
  type: Method
  source:
    remote:
      path: src/NSubstitute/Arg.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: InvokeDelegate
    path: ../src/NSubstitute/Arg.cs
    startLine: 99
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: Invoke any <code class="typeparamref">TDelegate</code> argument with specified arguments whenever a matching call is made to the substitute.
  example: []
  syntax:
    content: public static ref TDelegate InvokeDelegate<TDelegate>(params object[] arguments)
    parameters:
    - id: arguments
      type: System.Object[]
      description: Arguments to pass to delegate.
    typeParameters:
    - id: TDelegate
    return:
      type: '{TDelegate}'
    content.vb: Public Shared ByRef Function InvokeDelegate(Of TDelegate)(ParamArray arguments As Object()) As TDelegate
  overload: NSubstitute.Arg.InvokeDelegate*
  nameWithType.vb: Arg.InvokeDelegate(Of TDelegate)(ParamArray Object())
  fullName.vb: NSubstitute.Arg.InvokeDelegate(Of TDelegate)(ParamArray Object())
  name.vb: InvokeDelegate(Of TDelegate)(ParamArray Object())
- uid: NSubstitute.Arg.Do``1(System.Action{``0})
  commentId: M:NSubstitute.Arg.Do``1(System.Action{``0})
  id: Do``1(System.Action{``0})
  parent: NSubstitute.Arg
  langs:
  - csharp
  - vb
  name: Do<T>(Action<T>)
  nameWithType: Arg.Do<T>(Action<T>)
  fullName: NSubstitute.Arg.Do<T>(System.Action<T>)
  type: Method
  source:
    remote:
      path: src/NSubstitute/Arg.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Do
    path: ../src/NSubstitute/Arg.cs
    startLine: 108
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: >-
    Capture any argument compatible with type <code class="typeparamref">T</code> and use it to call the <code class="paramref">useArgument</code> function

    whenever a matching call is made to the substitute.
  example: []
  syntax:
    content: public static ref T Do<T>(Action<T> useArgument)
    parameters:
    - id: useArgument
      type: System.Action{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared ByRef Function [Do](Of T)(useArgument As Action(Of T)) As T
  overload: NSubstitute.Arg.Do*
  nameWithType.vb: Arg.Do(Of T)(Action(Of T))
  fullName.vb: NSubstitute.Arg.Do(Of T)(System.Action(Of T))
  name.vb: Do(Of T)(Action(Of T))
- uid: NSubstitute.Arg.Do``1(System.Action{System.Object})
  commentId: M:NSubstitute.Arg.Do``1(System.Action{System.Object})
  id: Do``1(System.Action{System.Object})
  parent: NSubstitute.Arg
  langs:
  - csharp
  - vb
  name: Do<T>(Action<object>)
  nameWithType: Arg.Do<T>(Action<object>)
  fullName: NSubstitute.Arg.Do<T>(System.Action<object>)
  type: Method
  source:
    remote:
      path: src/NSubstitute/Arg.cs
      branch: copilot/fix-8e5d1cea-abae-4546-925f-dabd0155be9d
      repo: https://github.com/nsubstitute/NSubstitute
    id: Do
    path: ../src/NSubstitute/Arg.cs
    startLine: 117
  assemblies:
  - NSubstitute
  namespace: NSubstitute
  summary: >-
    Capture any argument compatible with type <code class="typeparamref">T</code> and use it to call the <code class="paramref">useArgument</code> function

    whenever a matching call is made to the substitute.
  example: []
  syntax:
    content: 'public static ref T Do<T>(Action<object> useArgument) where T : Arg.AnyType'
    parameters:
    - id: useArgument
      type: System.Action{System.Object}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared ByRef Function [Do](Of T As Arg.AnyType)(useArgument As Action(Of Object)) As T
  overload: NSubstitute.Arg.Do*
  nameWithType.vb: Arg.Do(Of T)(Action(Of Object))
  fullName.vb: NSubstitute.Arg.Do(Of T)(System.Action(Of Object))
  name.vb: Do(Of T)(Action(Of Object))
references:
- uid: NSubstitute
  commentId: N:NSubstitute
  href: NSubstitute.html
  name: NSubstitute
  nameWithType: NSubstitute
  fullName: NSubstitute
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NSubstitute.Arg.Any*
  commentId: Overload:NSubstitute.Arg.Any
  href: NSubstitute.Arg.html#NSubstitute_Arg_Any__1
  name: Any
  nameWithType: Arg.Any
  fullName: NSubstitute.Arg.Any
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: NSubstitute.Arg.Is*
  commentId: Overload:NSubstitute.Arg.Is
  href: NSubstitute.Arg.html#NSubstitute_Arg_Is__1___0_
  name: Is
  nameWithType: Arg.Is
  fullName: NSubstitute.Arg.Is
- uid: System.Linq.Expressions.Expression{System.Predicate{{T}}}
  commentId: T:System.Linq.Expressions.Expression{System.Predicate{``0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Predicate<T>>
  nameWithType: Expression<Predicate<T>>
  fullName: System.Linq.Expressions.Expression<System.Predicate<T>>
  nameWithType.vb: Expression(Of Predicate(Of T))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Predicate(Of T))
  name.vb: Expression(Of Predicate(Of T))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: System.Linq.Expressions.Expression{System.Predicate{System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Predicate{System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Predicate<object>>
  nameWithType: Expression<Predicate<object>>
  fullName: System.Linq.Expressions.Expression<System.Predicate<object>>
  nameWithType.vb: Expression(Of Predicate(Of Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Predicate(Of Object))
  name.vb: Expression(Of Predicate(Of Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: NSubstitute.Arg.Invoke*
  commentId: Overload:NSubstitute.Arg.Invoke
  href: NSubstitute.Arg.html#NSubstitute_Arg_Invoke
  name: Invoke
  nameWithType: Arg.Invoke
  fullName: NSubstitute.Arg.Invoke
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action{{T}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: System.Action{{T1},{T2}}
  commentId: T:System.Action{``0,``1}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: '{T3}'
  commentId: '!:T3'
  definition: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: System.Action{{T1},{T2},{T3}}
  commentId: T:System.Action{``0,``1,``2}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: System.Action`4
  commentId: T:System.Action`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-4
  name: Action<T1, T2, T3, T4>
  nameWithType: Action<T1, T2, T3, T4>
  fullName: System.Action<T1, T2, T3, T4>
  nameWithType.vb: Action(Of T1, T2, T3, T4)
  fullName.vb: System.Action(Of T1, T2, T3, T4)
  name.vb: Action(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
- uid: '{T4}'
  commentId: '!:T4'
  definition: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: System.Action{{T1},{T2},{T3},{T4}}
  commentId: T:System.Action{``0,``1,``2,``3}
  parent: System
  definition: System.Action`4
  href: https://learn.microsoft.com/dotnet/api/system.action-4
  name: Action<T1, T2, T3, T4>
  nameWithType: Action<T1, T2, T3, T4>
  fullName: System.Action<T1, T2, T3, T4>
  nameWithType.vb: Action(Of T1, T2, T3, T4)
  fullName.vb: System.Action(Of T1, T2, T3, T4)
  name.vb: Action(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
- uid: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: NSubstitute.Arg.InvokeDelegate*
  commentId: Overload:NSubstitute.Arg.InvokeDelegate
  href: NSubstitute.Arg.html#NSubstitute_Arg_InvokeDelegate__1_System_Object___
  name: InvokeDelegate
  nameWithType: Arg.InvokeDelegate
  fullName: NSubstitute.Arg.InvokeDelegate
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: '{TDelegate}'
  commentId: '!:TDelegate'
  definition: TDelegate
  name: TDelegate
  nameWithType: TDelegate
  fullName: TDelegate
- uid: TDelegate
  name: TDelegate
  nameWithType: TDelegate
  fullName: TDelegate
- uid: NSubstitute.Arg.Do*
  commentId: Overload:NSubstitute.Arg.Do
  href: NSubstitute.Arg.html#NSubstitute_Arg_Do__1_System_Action___0__
  name: Do
  nameWithType: Arg.Do
  fullName: NSubstitute.Arg.Do
- uid: System.Action{System.Object}
  commentId: T:System.Action{System.Object}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<object>
  nameWithType: Action<object>
  fullName: System.Action<object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: System.Action(Of Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
